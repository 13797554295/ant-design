.roundedArrow(@width, @outer-radius, @bg-color) {
  @offset: 0.4;
  @corner-height: unit(((@outer-radius) * (1 - 1 / sqrt(2)))) + @offset;
  @corner-width: unit(((@outer-radius) * (1 / sqrt(2))));
  @corner-radius: unit((@outer-radius));

  border-radius: 0 0 @border-radius-base 0;

  &::before {
    position: absolute;
    top: @width - unit(@offset, px);
    left: unit((@corner-height - @offset), px) * -1;
    width: @width;
    height: @width;
    background: inherit;
    content: '';
    clip-path: path(
      'M 0 @{corner-height} A @{corner-radius} @{corner-radius} 0 0 1 @{corner-width} @{offset} L @{corner-width} 0 L 0 0 Z'
    );
  }

  &::after {
    position: absolute;
    top: unit((@corner-height - @offset), px) * -1;
    left: @width - unit(@offset, px);
    width: @width;
    height: @width;
    background: inherit;
    content: '';
    clip-path: path(
      'M 0 @{corner-width} L @{offset} @{corner-width} A @{corner-radius} @{corner-radius} 0 0 1 @{corner-height} 0 L 0 0 Z'
    );
  }
}
